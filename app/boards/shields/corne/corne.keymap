/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>

#define _34BASE 0
#define _CLMKdh 1
#define _42MODS 2
#define _NAVNUM 3
#define _USFUNC 4
#define _BTOOTH 5
#define _GAMING 6
#define _CTLGRP 7
#define _CAMGRP 8

/ { 
    macros {                
        bt_str: bluetooth_string {
            compatible = "zmk,behavior-macro";
            label = "BLUETOOTH_STRING";
            #binding-cells = <0>;
            wait-ms = <20>;
            tap-ms = <5>;
            bindings = <&kp B &kp L &kp U &kp E &kp T &kp O &kp O &kp T &kp H >;
        };   

        bt_clr_all: bluetooth_clear_all {
            compatible = "zmk,behavior-macro";
            label = "BLUETOOTH_CLEAR_ALL";
            #binding-cells = <0>;
            wait-ms = <20>;
            tap-ms = <5>;
            bindings = <&bt BT_SEL 0 &bt BT_CLR &bt BT_SEL 1 &bt BT_CLR &bt BT_SEL 2 &bt BT_CLR &bt BT_SEL 3 &bt BT_CLR &bt BT_SEL 4 &bt BT_CLR>;
        };

        em_str: email_string {
            compatible = "zmk,behavior-macro";
            label = "EMAIL_STRING";
            #binding-cells = <0>;
            wait-ms = <20>;
            tap-ms = <5>;
            bindings = <&kp M &kp B &kp I &kp S &kp S &kp O &kp N &kp N &kp AT &kp G &kp M &kp A &kp I &kp L &kp DOT &kp C &kp O &kp M >;
        };         
    };

    behaviors {
        td_cl_home: td_ctrl_left_home {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_CTRL_LEFT_HOME";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LC(LEFT)>, <&kp HOME>;
        };


        td_cr_end: td_ctrl_right_end {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_CTRL_RIGHT_END";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LC(RIGHT)>, <&kp END>;
        };

        td_esc_mtsk: td_esc_multitasker {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_ESC_MULTITASKER";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp ESC>, <&kp LC(LA(TAB))>;
        };


        td_q_esc: td_q_esc {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_Q_ESC";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp Q>, <&kp ESC>;
        };

        td_a_tab: td_a_tab {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_A_TAB";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp A>, <&kp TAB>;
        };       

        td_pp_nxt_prv: td_play_pause_next_prev {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_PLAY_PAUSE_NEXT_PREV";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp C_PP>, <&kp C_NEXT>, <&kp C_PREV>;
        };

        td_ctg_cmg: td_ctlgrp_camgrp {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_CTLGRP_CAMGRP";  
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&mo _CTLGRP>, <&mo _CAMGRP>;
        };

        mm_btb_l: mm_brace_to_bracket_left {        
            compatible = "zmk,behavior-mod-morph";
            label = "MM_BRACE_TO_BRACKET_LEFT";
            #binding-cells = <0>;
            bindings = <&kp LBRC>, <&kp LBKT>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        mm_btb_r: mm_brace_to_bracket_right {        
            compatible = "zmk,behavior-mod-morph";
            label = "MM_BRACE_TO_BRACKET_RIGHT";
            #binding-cells = <0>;
            bindings = <&kp RBRC>, <&kp RBKT>;
            mods = <(MOD_LSFT|MOD_RSFT)>; 
        };
    };

    keymap {
        compatible = "zmk,keymap";

        _34BASE {
            label = "34BASE";
            bindings = <
                &none  &td_q_esc     &kp W  &kp E  &kp R  &kp T                                                       &kp Y          &kp U  &kp I      &kp O    &kp P            &rgb_ug RGB_TOG
                &none  &td_a_tab     &kp S  &kp D  &kp F  &kp G                                                       &kp H          &kp J  &kp K      &kp L    &kp SQT          &rgb_ug RGB_EFF
                &none  &mt LSHIFT Z  &kp X  &kp C  &kp V  &kp B                                                       &kp N          &kp M  &kp COMMA  &kp DOT  &mt RSHIFT FSLH  &none
                                                          &none  &mt LCTRL DEL  &lt _NAVNUM ENTER  &lt _NAVNUM SPACE  &mt LALT BSPC  &none            
            >;
        };

        _CLMKDH {
            label = "CLMKDH";
            bindings = <
                &none  &td_q_esc     &kp W  &kp F  &kp P   &kp B                   &kp J   &kp L   &kp U      &kp Y    &kp SQT          &none  
                &none  &td_a_tab     &kp R  &kp S  &kp T   &kp G                   &kp M   &kp N   &kp E      &kp I    &kp O            &none 
                &none  &mt LSHIFT Z  &kp X  &kp C  &kp D   &kp V                   &kp K   &kp H   &kp COMMA  &kp DOT  &mt RSHIFT FSLH  &none  
                                                   &none   &trans  &trans  &trans  &trans  &none         
           >;
       };

        _42MODS {
            label = "42MODS";
            bindings = <
                &kp ESC   &kp Q  &trans  &trans  &trans    &trans                  &trans  &trans    &trans  &trans  &trans    &kp BSPC
                &kp TAB   &kp A  &trans  &trans  &trans    &trans                  &trans  &trans    &trans  &trans  &trans    &kp ENTER
                &kp LSHFT &kp Z  &trans  &trans  &trans    &trans                  &trans  &trans    &trans  &trans  &kp FSLH  &kp LSHFT
                                                 &kp LALT  &trans  &trans  &trans  &trans  &kp LGUI
            >;
        };
        
        _NAVNUM {
            label = "NAVNUM";
            bindings = <
                &trans  &td_esc_mtsk      &td_cl_home  &kp UP     &td_cr_end  &kp LPAR                                              &kp RPAR     &kp N7  &kp N8  &kp  N9  &kp LC(DEL)      &trans  
                &trans  &kp TAB           &kp LEFT     &kp DOWN   &kp RIGHT   &mm_btb_l                                             &mm_btb_r    &kp N4  &kp N5  &kp  N6  &kp SEMI         &trans  
                &trans  &mt LSHIFT SPACE  &kp UNDER    &kp COLON  &kp MINUS   &kp EQUAL                                             &kp PIPE     &kp N1  &kp N2  &kp  N3  &mt LSHIFT BSLH  &trans  
                                                                  &trans      &mt LCTRL PLUS  &lt _USFUNC ENTER  &lt _USFUNC SPACE  &mt LGUI N0  &trans
            >;
        };

        _USFUNC {
            label = "USFUNC";
            bindings = <
                &trans  &kp CAPS  &kp GRAVE  &kp TILDE  &kp C_BRI_DN  &kp C_BRI_AUTO                  &kp C_MUTE  &kp C_VOL_DN  &kp C_VOL_UP  &td_pp_nxt_prv  &mo _BTOOTH  &trans  
                &trans  &kp EXCL  &kp AT     &kp HASH   &kp DLLR      &kp PRCNT                       &kp CARET   &kp AMPS      &kp ASTRK     &kp MINUS       &kp PLUS     &trans  
                &trans  &kp F1    &kp F2     &kp F3     &kp F4        &kp F5                          &kp F6      &kp F7        &kp F8        &kp F9          &kp F10      &trans  
                                                        &trans        &kp F11         &trans  &trans  &kp F12     &trans 
            >;
        };

        _BTOOTH {
            label = "BTOOTH";
            bindings = <
                &trans  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                  &tog _GAMING  &trans  &trans  &trans  &trans  &trans     
                &trans  &bt_str       &trans        &trans        &trans        &trans                        &tog _CLMKdh  &trans  &trans  &trans  &trans  &trans  
                &trans  &bt BT_CLR    &trans        &trans        &trans        &bootloader                   &tog _42MODS  &trans  &trans  &trans  &trans  &trans  
                                                                  &trans        &bt_clr_all   &trans  &trans  &trans        &trans 
            >; 
        };                              
        
        _GAMING {
            label = "GAMING";
            bindings = <
                &kp ESC    &kp Q  &kp W  &kp E  &kp R  &kp T        &kp Y                                      &kp U          &kp I           &kp O    &kp P      &kp BSPC
                &kp TAB    &kp A  &kp S  &kp D  &kp F  &kp G        &kp H                                      &kp J          &kp K           &kp L    &kp SQT    &kp ENTER
                &kp LSHFT  &kp Z  &kp X  &kp C  &kp V  &kp B        &kp N                                      &kp M          &kp COMMA       &kp DOT  &kp SLASH  &kp RSHFT
                                                       &mo _CAMGRP  &td_ctg_cmg  &kp SPACE  &lt _NAVNUM SPACE  &tog _GAMING   &td_pp_nxt_prv
            >;                
        };

        _CTLGRP {
            label = "CTLGRP";
            bindings = <
                &kp F11  &kp LC(N1)  &kp LC(N2)  &kp LC(N3)  &kp LC(N4)  &kp LC(N5)                  &trans  &trans  &trans  &trans  &trans  &trans       
                &kp F12  &kp LS(N1)  &kp LS(N2)  &kp LS(N3)  &kp LS(N4)  &kp LS(N5)                  &trans  &trans  &trans  &trans  &trans  &trans
                &kp F13  &kp N1      &kp N2      &kp N3      &kp N4      &kp N5                      &trans  &trans  &trans  &trans  &trans  &trans
                                                             &trans      &trans      &trans  &trans  &trans  &trans    
            >;                
        };

        _CAMGRP {
            label = "CAMGRP";
            bindings = <
                &kp F14  &kp LC(F1)  &kp LC(F2)  &kp LC(F3)  &kp LC(F4)  &kp LC(F5)                  &trans  &trans  &trans  &trans  &trans  &trans       
                &kp F15  &trans      &trans      &trans      &trans      &trans                      &trans  &trans  &trans  &trans  &trans  &trans
                &kp F16  &kp F1      &kp F2      &kp F3      &kp F4      &kp F5                      &trans  &trans  &trans  &trans  &trans  &trans
                                                             &trans      &trans      &trans  &trans  &trans  &trans       
            >; 
        };
    };
};