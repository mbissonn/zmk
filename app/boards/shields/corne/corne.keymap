/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define _QWERTY 0
#define _CLMKdh 1
#define _NAVNUM 2
#define _USFUNC 3
#define _BTOOTH 4
#define _GAMING 5

/ { 
    macros {
        bt_str: bluetooth_string {
            compatible = "zmk,behavior-macro";
            label = "BLUETOOTH_STRING";
            #binding-cells = <0>;
            wait-ms = <20>;
            tap-ms = <5>;
            bindings = <&kp B &kp L &kp U &kp E &kp T &kp O &kp O &kp T &kp H >;
        };   

        em_str: email_string {
            compatible = "zmk,behavior-macro";
            label = "EMAIL_STRING";
            #binding-cells = <0>;
            wait-ms = <20>;
            tap-ms = <5>;
            bindings = <&kp M &kp B &kp I &kp S &kp S &kp O &kp N &kp N &kp AT &kp G &kp M &kp A &kp I &kp L &kp DOT &kp C &kp O &kp M >;
        };         
    };
};

/ {
    behaviors {
        td_cl_home: td_ctrl_left_home {
              compatible = "zmk,behavior-tap-dance";
              label = "TD_CTRL_LEFT_HOME";
              #binding-cells = <0>;
              tapping-term-ms = <200>;
              bindings = <&kp LC(LEFT)>, <&kp HOME>;
        };


        td_cr_end: td_ctrl_right_end {
              compatible = "zmk,behavior-tap-dance";
              label = "TD_CTRL_RIGHT_END";
              #binding-cells = <0>;
              tapping-term-ms = <200>;
              bindings = <&kp LC(RIGHT)>, <&kp END>;
        };
       
        td_esc_mtsk: td_esc_multitasker {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_ESC_MULTITASKER";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp ESC>, <&kp LC(LA(TAB))>;
        };


        td_q_esc: td_q_esc {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_Q_ESC";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp Q>, <&kp ESC>;
        };

        td_a_tab: td_a_tab {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_A_TAB";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp A>, <&kp TAB>;
        };       

        td_pp_nxt_prv: td_play_pause_next_prev {
             compatible = "zmk,behavior-tap-dance";
             label = "TD_PLAY_PAUSE_NEXT_PREV";
             #binding-cells = <0>;
             tapping-term-ms = <200>;
             bindings = <&kp C_PP>, <&kp C_NEXT>, <&kp C_PREV>;
        };

        td_em_bt: td_email_string_bt_toggle {
             compatible = "zmk,behavior-tap-dance";
             label = "TD_EMAIL_STRING_BT_TOGGLE";  
             #binding-cells = <0>;
             tapping-term-ms = <200>;
             bindings = <&none>, <&em_str>, <&mo _BTOOTH>;
        };

        mm_btb_l: mm_brace_to_bracket_left {        
            compatible = "zmk,behavior-mod-morph";
            label = "MM_BRACE_TO_BRACKET_LEFT";
            #binding-cells = <0>;
            bindings = <&kp LBRC>, <&kp LBKT>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        mm_btb_r: mm_brace_to_bracket_right {        
            compatible = "zmk,behavior-mod-morph";
            label = "MM_BRACE_TO_BRACKET_RIGHT";
            #binding-cells = <0>;
            bindings = <&kp RBRC>, <&kp RBKT>;
            mods = <(MOD_LSFT|MOD_RSFT)>; 
        };
    };

    keymap {
        compatible = "zmk,keymap";

        _QWERTY {
            label = "QWERTY";
            bindings = <
                &none  &td_q_esc     &kp W  &kp E  &kp R                                                &kp T          &kp Y  &kp U  &kp I      &kp O    &kp P            &none
                &none  &td_a_tab     &kp S  &kp D  &kp F                                                &kp G          &kp H  &kp J  &kp K      &kp L    &kp SQT          &none
                &none  &mt LSHIFT Z  &kp X  &kp C  &kp V                                                &kp B          &kp N  &kp M  &kp COMMA  &kp DOT  &mt RSHIFT FSLH  &none
                                            &none  &mt LCTRL DEL  &lt _NAVNUM ENTER  &lt _NAVNUM SPACE  &mt LALT BSPC  &none           
            >;
        };                                             
        
        _CLMKDH {
            label = "CLMKDH";
            bindings = <
                &none  &td_q_esc     &kp W  &kp F  &kp P   &kp B                   &kp J   &kp L   &kp U      &kp Y    &kp SQT          &none
                &none  &td_a_tab     &kp R  &kp S  &kp T   &kp G                   &kp M   &kp N   &kp E      &kp I    &kp O            &none
                &none  &mt LSHIFT Z  &kp X  &kp C  &kp D   &kp V                   &kp K   &kp H   &kp COMMA  &kp DOT  &mt RSHIFT FSLH  &none
                                                   &none   &trans  &trans  &trans  &trans  &none        
            >;
        };

        _NAVNUM {
            label = "NAVNUM";
            bindings = <   
                &none  &td_esc_mtsk      &td_cl_home  &kp UP     &td_cr_end  &kp LPAR                                             &kp RPAR     &kp N7  &kp N8  &kp  N9  &kp LC(DEL)      &none
                &none  &kp TAB           &kp LEFT     &kp DOWN   &kp RIGHT   &mm_btb_l                                            &mm_btb_r    &kp N4  &kp N5  &kp  N6  &kp SEMI         &none
                &none  &mt LSHIFT EQUAL  &kp UNDER    &kp COLON  &kp MINUS   &kp PLUS                                             &kp PIPE     &kp N1  &kp N2  &kp  N3  &mt LSHIFT BSLH  &none
                                                                 &none       &mt LCTRL DEL  &lt _USFUNC ENTER  &lt _USFUNC SPACE  &mt LGUI N0  &none
            >;
        };

        _USFUNC {
            label = "USFUNC";
            bindings = <
                &none  &kp CAPS  &kp GRAVE  &kp TILDE  &kp C_BRI_DN  &kp C_BRI_AUTO                  &kp C_MUTE  &kp C_VOL_DN  &kp C_VOL_UP  &td_pp_nxt_prv  &td_em_bt  &none
                &none  &kp EXCL  &kp AT     &kp HASH   &kp DLLR      &kp PRCNT                       &kp CARET   &kp AMPS      &kp ASTRK     &kp MINUS       &kp PLUS   &none
                &none  &kp F1    &kp F2     &kp F3     &kp F4        &kp F5                          &kp F6      &kp F7        &kp F8        &kp F9          &kp F10    &none
                                                       &none         &kp F11         &trans  &trans  &kp F12     &none
            >;
        };

        _BTOOTH { 
            label = "BTOOTH";
            bindings = < 
                &none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3                        &bt BT_SEL 4    &trans  &trans  &trans  &trans  &trans  &none    
                &none  &bt_str       &trans        &trans        &trans                              &trans          &trans  &trans  &trans  &trans  &trans  &none  
                &none  &bt BT_CLR    &trans        &trans        &trans                              &trans          &trans  &trans  &trans  &trans  &trans  &none
                                                                 &none         &tog _CLMKdh  &trans  &trans  &trans  &none
            >;              
        };

        _GAMING {
            label = "GAMING"
            bindings = <
                &kp ESC      &kp Q        &kp W        &kp E   &kp R           &kp T     &kp Y             &kp U        &kp I        &kp O        &kp P        &kp BSPC
                &kp TAB      &kp A        &kp S        &kp D   &kp F           &kp G     &kp H             &kp J        &kp K        &kp L        &kp SQT      &kp ENTER
                &kp LSHFT    &kp Z        &kp X        &kp C   &kp V           &kp B     &kp N             &kp M        &kp COMMA    &kp DOT      &kp SLASH    &kp RSHFT
                                                       &trans  &mo CTRL_GROUPS &kp SPACE &lt NAV_NUM SPACE &music_dance &trans
            >;                
        };

        _CTRL_GROUPS {
            label = "CGROUPS"
            bindings = <
                &trans      &kp N1       &kp N2       &kp N3     &kp N4     &kp N5       &trans       &trans       &trans       &trans       &trans       &trans       
                &alt_tabber &kp LC(N1)   &kp LC(N2)   &kp LC(N3) &kp LC(N4) &kp LC(N5)   &trans       &trans       &trans       &trans       &trans       &trans       
                &trans      &kp LS(N1)   &kp LS(N2)   &kp LS(N3) &kp LS(N4) &kp LS(N5)   &trans       &trans       &trans       &trans       &trans       &trans       
                                                                        &trans     &trans     &trans       &trans       &trans       &trans       

            >; 
        };   
    };
};

/*#define BASE 0
#define GAMING 1
#define CTRL_GROUPS 2
#define NAV_NUM 3
#define NUM_SYM_FUNC 4
#define BLUETOOTH 5

/ {
        macros {
                ble_string: ble_string {
                        compatible = "zmk,behavior-macro";
                        label = "ZM_ble_string";
                        #binding-cells = <0>;
                        wait-ms = <5>;
                        tap-ms = <5>;
                        bindings = <&kp B &kp L &kp U &kp E &kp T &kp O &kp O &kp T &kp H >                          
                                 ;
                }; 
        };
};
 
/ {
        behaviors {
                music_dance: music_dance {
                        compatible = "zmk,behavior-tap-dance";
                        label = "MUSIC_DANCE";
                        #binding-cells = <0>;
                        tapping-term-ms = <200>;
                        bindings = <&kp C_PP>, <&kp C_NEXT>, <&kp C_PREV>;
                };

                ld_ble_game: ld_ble_game {
                        compatible = "zmk,behavior-tap-dance";
                        label = "LD_BLE_GAME";
                        #binding-cells = <0>;
                        tapping-term-ms = <200>;
                        bindings = <&mo BLUETOOTH>, <&mo BLUETOOTH>, <&tog GAMING>;
                };

                ctrl_left_home: ctrl_left_home {
                        compatible = "zmk,behavior-tap-dance";
                        label = "CTRL_LEFT_HOME";
                        #binding-cells = <0>;
                        tapping-term-ms = <200>;
                        bindings = <&kp LC(LEFT)>, <&kp HOME>;    
                };

                ctrl_right_end: ctrl_right_end {
                        compatible = "zmk,behavior-tap-dance";
                        label = "CTRL_RIGHT_END";
                        #binding-cells = <0>;
                        tapping-term-ms = <200>;
                        bindings = <&kp LC(RIGHT)>, <&kp END>;    
                };

                alt_tabber: alt_tabber{
                        compatible = "zmk,behavior-tap-dance";
                        label = "ALT_TABBER";
                        #binding-cells = <0>;
                        tapping-term-ms = <200>;
                        bindings = <&kp TAB>, <&kp LC(LA(TAB))>;    
                };
        };

        keymap {
                compatible = "zmk,keymap";

                BASE {
                        bindings = <
                                &kp ESC      &kp Q        &kp W        &kp E     &kp R        &kp T             &kp Y             &kp U    &kp I        &kp O        &kp P        &kp BSPC
                                &kp TAB      &kp A        &kp S        &kp D     &kp F        &kp G             &kp H             &kp J    &kp K        &kp L        &kp SQT      &kp ENTER
                                &kp LSHFT    &kp Z        &kp X        &kp C     &kp V        &kp B             &kp N             &kp M    &kp COMMA    &kp DOT      &kp SLASH    &kp RSHFT
                                                                       &kp LCTRL &mt LALT DEL &lt NAV_NUM SPACE &lt NAV_NUM SPACE &kp RGUI &ld_ble_game
                        >;
                };
              
                GAMING {
                        bindings = <
                                &kp ESC      &kp Q        &kp W        &kp E   &kp R           &kp T     &kp Y             &kp U        &kp I        &kp O        &kp P        &kp BSPC
                                &kp TAB      &kp A        &kp S        &kp D   &kp F           &kp G     &kp H             &kp J        &kp K        &kp L        &kp SQT      &kp ENTER
                                &kp LSHFT    &kp Z        &kp X        &kp C   &kp V           &kp B     &kp N             &kp M        &kp COMMA    &kp DOT      &kp SLASH    &kp RSHFT
                                                                       &trans  &mo CTRL_GROUPS &kp SPACE &lt NAV_NUM SPACE &music_dance &trans
                        >;                
                };

                CTRL_GROUPS {
                        bindings = <
                                &trans      &kp N1       &kp N2       &kp N3     &kp N4     &kp N5       &trans       &trans       &trans       &trans       &trans       &trans       
                                &alt_tabber &kp LC(N1)   &kp LC(N2)   &kp LC(N3) &kp LC(N4) &kp LC(N5)   &trans       &trans       &trans       &trans       &trans       &trans       
                                &trans      &kp LS(N1)   &kp LS(N2)   &kp LS(N3) &kp LS(N4) &kp LS(N5)   &trans       &trans       &trans       &trans       &trans       &trans       
                                                                          &trans     &trans     &trans       &trans       &trans       &trans       

                       >; 
                };
               
                NAV_NUM {
                        bindings = <
                                &kp GRAVE    &ctrl_left_home &kp UP    &ctrl_right_end &kp PLUS     &kp LPAR               &kp RPAR               &kp N7       &kp N8       &kp N9       &kp DEL      &kp BSPC     
                                &kp TAB      &kp LEFT        &kp DOWN  &kp RIGHT       &kp EQUAL    &kp LBRC               &kp RBRC               &kp N4       &kp N5       &kp N6       &kp SEMI     &kp ENTER    
                                &kp LSHFT    &kp PIPE        &kp UNDER &kp COLON       &kp MINUS    &kp LBKT               &kp RBKT               &kp N1       &kp N2       &kp N3       &kp BSLH     &kp RSHFT    
                                                                       &trans          &mt LALT DEL &lt NUM_SYM_FUNC SPACE &lt NUM_SYM_FUNC SPACE &kp N0       &music_dance       
                        >;
                };

                NUM_SYM_FUNC {
                        bindings = <
                                &kp N1       &kp N2       &kp N3       &kp N4       &kp N5       &kp N6       &kp N7       &kp N8       &kp N9       &kp N0       &kp MINUS    &kp EQUAL    
                                &kp EXCL     &kp AT       &kp HASH     &kp DLLR     &kp PRCNT    &kp CARET    &kp AMPS     &kp ASTRK    &kp LPAR     &kp RPAR     &kp UNDER    &kp PLUS   
                                &kp F1       &kp F2       &kp F3       &kp F4       &kp F5       &kp F6       &kp F7       &kp F8       &kp F9       &kp F10      &kp F11      &kp F12    
                                                                       &kp CAPS     &trans       &trans       &trans       &trans       &trans     
                        >;
                };
  
                BLUETOOTH {
                        bindings = <
                                &bt BT_CLR   &trans       &trans       &trans        &trans        &trans        &trans        &trans       &trans   &trans       &trans       &ble_string       
                                &trans       &trans       &trans       &trans        &trans        &trans        &trans        &trans       &trans   &trans       &trans       &trans       
                                &trans       &trans       &trans       &trans        &trans        &trans        &trans        &trans       &trans   &trans       &trans       &trans       
                                                                       &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4 &trans       

                       >; 
                };                              
        };
};
*/