tssadfdasfsdafdfasdadsfdsfsafd/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

 #include <behaviors.dtsi>
 #include <dt-bindings/zmk/keys.h>
 #include <dt-bindings/zmk/bt.h>
 #include <dt-bindings/zmk/rgb.h>
 #include <dt-bindings/zmk/ext_power.h>
 #include <dt-bindings/zmk/outputs.h>


/* NOTE: At the time of the creation of this keymap, there are no specified codes for 'eisuu' and 'kana' input in ZMK.
However, 'LANG1' and 'LANG2' are fully-functioning candidates for 'kana' and 'eisuu' input respectively.
As such, those are in use within the default layer at this time.*/

/ {
       keymap {
              compatible = "zmk,keymap";

              0 {       
                     bindings = <
       &kp ESC    &kp Q      &kp W      &kp E      &kp R        &kp T       &kp Y       &kp U      &kp I         &kp O      &kp P      &kp BSPC        
       &kp TAB    &kp A      &kp S      &kp D      &kp F        &kp G       &kp H       &kp J      &kp K         &kp L      &kp SQT    &kp ENTER       
       &kp LSHFT  &kp Z      &kp X      &kp C      &kp V        &kp B       &kp N       &kp M      &kp COMMA     &kp DOT    &kp SLASH  &kp RSHFT       
       &kp LCTRL  &to 3      &to 1      &kp LGUI   &mt LALT DEL &lt 1 SPACE &lt 1 SPACE &lt 6 DEL  &mt LGUI LEFT &lt 5 DOWN &lt 4 UP   &mt LCTRL RIGHT  
                     >;
              };

              1 {
                     bindings = <
       &kp GRAVE  &kp SLASH  &kp UP     &kp ASTRK  &kp PLUS   &kp LPAR    &kp RPAR    &kp N7    &kp N8      &kp N9      &kp DEL    &kp BSPC     
       &kp TAB    &kp LEFT   &kp DOWN   &kp RIGHT  &kp EQUAL  &kp LBRC    &kp RBRC    &kp N4    &kp N5      &kp N6      &kp SEMI   &kp ENTER    
       &kp LSHFT  &kp PIPE   &kp UNDER  &kp COLON  &kp MINUS  &kp LBKT    &kp RBKT    &kp N1    &kp N2      &kp N3      &kp BSLH   &kp RSHFT    
       &trans     &to 0      &to 2      &trans     &trans     &lt 2 SPACE &lt 2 SPACE &kp N0    &kp DOT     &kp COMMA   &trans     &trans    
                     >;
              };

              2 {
                     bindings = <
       &kp N1     &kp N2     &kp N3     &kp N4      &kp N5      &kp N6      &kp N7     &kp N8     &kp N9      &kp N0      &kp MINUS  &kp EQUAL    
       &kp EXCL   &kp AT     &kp HASH   &kp DLLR    &kp PRCNT   &kp CARET   &kp AMPS   &kp ASTRK  &kp LPAR    &kp RPAR    &kp UNDER  &kp PLUS   
       &kp F1     &kp F2     &kp F3     &kp F4      &kp F5      &kp F6      &kp F7     &kp F8     &kp F9      &kp F10     &kp F11    &kp F12    
       &kp CAPS   &to 1      &to 3      &trans      &trans      &kp SPACE   &kp SPACE  &trans     &trans      &trans      &trans     &trans    
                     >;
              };

              3 {
                     bindings = <
       &kp ESC    &kp LC(K)  &kp UP     &kp LC(A)  &kp PG_UP   &kp HOME   &kp Y      &kp U      &kp I      &kp O      &kp P       &kp BSPC   
       &kp TAB    &kp LEFT   &kp DOWN   &kp RIGHT  &kp PG_DN   &kp END    &kp H      &kp J      &kp K      &kp L      &kp SQT     &kp ENTER    
       &kp ENTER  &kp Z      &kp X      &kp C      &kp V       &kp CAPS   &kp N      &kp M      &kp COMMA  &kp DOT    &kp SLASH   &kp RSHFT   
       &kp LCTRL  &to 2      &to 0      &trans     &kp LA(M)   &kp SPACE  &kp SPACE  &trans     &trans     &trans     &trans      &trans     
                     >;
              };

              4 {
                     bindings = <
       &trans   &trans       &kp LC(UP)   &trans        &trans   &trans   &trans   &trans   &trans   &trans   &trans   &trans   
       &trans   &kp LC(LEFT) &kp LC(DOWN) &kp LC(RIGHT) &trans   &trans   &trans   &trans   &trans   &trans   &trans   &trans   
       &trans   &trans       &trans       &trans        &trans   &trans   &trans   &trans   &trans   &trans   &trans   &trans   
       &trans   &trans       &trans       &trans        &trans   &trans   &trans   &trans   &trans   &trans   &trans   &trans    
                       >;
              };

             5 {
                     bindings = <
       &trans   &trans       &kp LG(UP)   &trans        &trans   &trans   &trans   &trans   &trans   &trans   &trans   &trans   
       &trans   &kp LG(LEFT) &kp LG(DOWN) &kp LG(RIGHT) &trans   &trans   &trans   &trans   &trans   &trans   &trans   &trans   
       &trans   &trans       &trans       &trans        &trans   &trans   &trans   &trans   &trans   &trans   &trans   &trans   
       &trans   &trans       &trans       &trans        &trans   &trans   &trans   &trans   &trans   &trans   &trans   &trans     
                       >;
              };

              6 {
                     bindings = <
       &trans   &trans   &trans   &trans   &trans   &trans     &trans   &trans   &trans   &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2   
       &trans   &trans   &trans   &trans   &trans   &trans     &trans   &trans   &trans   &trans       &trans       &trans   
       &trans   &trans   &trans   &trans   &trans   &trans     &trans   &trans   &trans   &trans       &trans       &trans   
       &trans   &trans   &trans   &trans   &trans   &trans     &trans   &trans   &trans   &trans       &trans       &bt BT_CLR     
                       >;
              };

       };
};
