// Copyright (c) 2022 The ZMK Contributors
// SPDX-License-Identifier: MIT

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define QWERTY 0
#define MOD_DH 1
#define NAV_NUM 2
#define NUM_SYM_FUNC 3
#define BLUETOOTH 4

/ { 
    macros {
        bluetoothstring: bluetoothstring {
            compatible = "zmk,behavior-macro";
            label = "BLUETOOTHSTRING";
            #binding-cells = <0>;
            wait-ms = <20>;
            tap-ms = <5>;
            bindings = <&kp B &kp L &kp U &kp E &kp T &kp O &kp O &kp T &kp H >;
        };  

        email_string: email_string {
            compatible = "zmk,behavior-macro";
            label = "EMAIL_STRING";
            #binding-cells = <0>;
            wait-ms = <20>;
            tap-ms = <5>;
            bindings = <&kp M &kp B &kp I &kp S &kp S &kp O &kp N &kp N &kp AT &kp G &kp M &kp A &kp I &kp L &kp DOT &kp C &kp O &kp M >;
        };          
    };
};

/ {
    behaviors {
        ctrlLeft_home: ctrlLeft_home {
              compatible = "zmk,behavior-tap-dance";
              label = "CTRLLEFT_HOME";
              #binding-cells = <0>;
              tapping-term-ms = <200>;
              bindings = <&kp LC(LEFT)>, <&kp HOME>;
        };


        ctrlRight_end: ctrlRight_end {
              compatible = "zmk,behavior-tap-dance";
              label = "CTRLRIGHT_END";
              #binding-cells = <0>;
              tapping-term-ms = <200>;
              bindings = <&kp LC(RIGHT)>, <&kp END>;
        };
       
        esc_switch: esc_switch {
            compatible = "zmk,behavior-tap-dance";
            label = "ESC_SWITCH";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp ESC>, <&kp LC(LA(TAB))>;
        };

        q_esc: q_esc {
            compatible = "zmk,behavior-tap-dance";
            label = "Q_ESC";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp Q>, <&kp ESC>;
        };

        a_tab: a_tab {
            compatible = "zmk,behavior-tap-dance";
            label = "A_TAB";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp A>, <&kp TAB>;
        };       

        pp_nxt_prv: pp_nxt_prv {
             compatible = "zmk,behavior-tap-dance";
             label = "PP_NXT_PRV";
             #binding-cells = <0>;
             tapping-term-ms = <200>;
             bindings = <&kp C_PP>, <&kp C_NEXT>, <&kp C_PREV>;
        };

        email_bluetooth: email_bluetooth {
             compatible = "zmk,behavior-tap-dance";
             label = "EMAIL_BLUETOOTH";  
             #binding-cells = <0>;
             tapping-term-ms = <200>;
             bindings = <&email_string>, <&mo BLUETOOTH>;
        };

        under_minus: under_minus {        
            compatible = "zmk,behavior-mod-morph";
            label = "UNDER_MINUS";
            #binding-cells = <0>;
            bindings = <&kp UNDER>, <&kp MINUS>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        colon_plus: colon_plus {        
            compatible = "zmk,behavior-mod-morph";
            label = "COLON_PLUS";
            #binding-cells = <0>;
            bindings = <&kp COLON>, <&kp PLUS>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };  

        pipe_equals: pipe_equals {        
            compatible = "zmk,behavior-mod-morph";
            label = "PIPE_EQUALS";
            #binding-cells = <0>;
            bindings = <&kp PIPE>, <&kp EQUAL>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        cbr_par_bkt: cbr_par_bkt {        
            compatible = "zmk,behavior-mod-morph";
            label = "CBR_PAR_BKT";
            #binding-cells = <0>;
            bindings = <&kp PIPE>, <&kp EQUAL>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        QWERTY {
            label = "QWERTY";
            bindings = <
                &q_esc       &kp W &kp E &kp R         &kp T             &kp Y             &kp U         &kp I     &kp O   &kp P
                &a_tab       &kp S &kp D &kp F         &kp G             &kp H             &kp J         &kp K     &kp L   &kp SQT
                &mt LSHIFT Z &kp X &kp C &kp V         &kp B             &kp N             &kp M         &kp COMMA &kp DOT &mt RSHIFT FSLH
                                         &mt LCTRL DEL &lt NAV_NUM ENTER &lt NAV_NUM SPACE &mt LALT BSPC           
            >;
        };                                             
        
        MOD_DH {
            label = "MOD_DH";
            bindings = <
                &q_esc       &kp W &kp F &kp P  &kp B  &kp J  &kp L  &kp U     &kp Y   &kp SQT
                &a_tab       &kp R &kp S &kp T  &kp G  &kp M  &kp N  &kp E     &kp I   &kp O
                &mt LSHIFT Z &kp X &kp C &kp D  &kp V  &kp K  &kp H  &kp COMMA &kp DOT &mt RSHIFT FSLH
                                         &trans &trans &trans &trans          
            >;
        };

        NAV_NUM {
            label = "NAVNUM";
            bindings = <   
                &esc_switch      &ctrlLeft_home &kp UP      &ctrlRight_end    &kp LPAR               &kp RPAR               &kp N7 &kp N8 &kp N9 &kp LC(BSPC)     
                &kp TAB          &kp LEFT       &kp DOWN    &kp RIGHT         &kp LBRC               &kp RBRC               &kp N4 &kp N5 &kp N6 &kp SEMI
                &mt LSHIFT LC(Y) &pipe_equals   &colon_plus &under_minus      &kp LBKT               &kp RBKT               &kp N1 &kp N2 &kp N3 &mt LSHIFT BSLH 
                                                            &mt RCTRL LC(DEL) &lt NUM_SYM_FUNC ENTER &lt NUM_SYM_FUNC SPACE &mt LGUI N0
            >;
        };

        NUM_SYM_FUNC {
            label = "NSFUNC";
            bindings = <
                &kp CAPS &kp GRAVE &kp TILDE &kp C_BRI_DN &kp C_BRI_AUTO &kp C_MUTE &kp C_VOL_DN &kp C_VOL_UP &pp_nxt_prv &email_bluetooth    
                &kp EXCL &kp AT    &kp HASH  &kp DLLR     &kp PRCNT      &kp CARET  &kp AMPS     &kp ASTRK    &kp MINUS   &kp PLUS  
                &kp F1   &kp F2    &kp F3    &kp F4       &kp F5         &kp F6     &kp F7       &kp F8       &kp F9      &kp F10   
                                             &kp F11      &trans         &trans     &kp F12 
            >;
        };

        BLUETOOTH { 
            label = "BTOOTH";
            bindings = < 
                &bt BT_SEL 0     &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4 &trans &trans &trans &trans &trans       
                &bluetoothstring &trans       &trans       &trans       &trans       &trans &trans &trans &trans &trans       
                &bt BT_CLR       &trans       &trans       &trans       &trans       &trans &trans &trans &trans &trans  
                                                           &tog MOD_DH  &trans       &trans &trans 
            >;              
        };
    };
};
