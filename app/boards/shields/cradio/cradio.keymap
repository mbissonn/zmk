// Copyright (c) 2022 The ZMK Contributors
// SPDX-License-Identifier: MIT

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define _QWERTY 0
#define _CLMKdh 1
#define _NAVNUM 2
#define _USFUNC 3
#define _BTOOTH 4

/ { 
    macros {
        bt_str: bluetooth_string {
            compatible = "zmk,behavior-macro";
            label = "BLUETOOTH_STRING";
            #binding-cells = <0>;
            wait-ms = <20>;
            tap-ms = <5>;
            bindings = <&kp B &kp L &kp U &kp E &kp T &kp O &kp O &kp T &kp H >;
        };   

        em_str: email_string {
            compatible = "zmk,behavior-macro";
            label = "EMAIL_STRING";
            #binding-cells = <0>;
            wait-ms = <20>;
            tap-ms = <5>;
            bindings = <&kp M &kp B &kp I &kp S &kp S &kp O &kp N &kp N &kp AT &kp G &kp M &kp A &kp I &kp L &kp DOT &kp C &kp O &kp M >;
        };         
    };
};

/ {
    behaviors {
        td_cl_home: td_ctrl_left_home {
              compatible = "zmk,behavior-tap-dance";
              label = "TD_CTRL_LEFT_HOME";
              #binding-cells = <0>;
              tapping-term-ms = <200>;
              bindings = <&kp LC(LEFT)>, <&kp HOME>;
        };


        td_cr_end: td_ctrl_right_end {
              compatible = "zmk,behavior-tap-dance";
              label = "TD_CTRL_RIGHT_END";
              #binding-cells = <0>;
              tapping-term-ms = <200>;
              bindings = <&kp LC(RIGHT)>, <&kp END>;
        };
       
        td_esc_mtsk: td_esc_multitasker {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_ESC_MULTITASKER";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp ESC>, <&kp LC(LA(TAB))>;
        };


        td_q_esc: td_q_esc {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_Q_ESC";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp Q>, <&kp ESC>;
        };

        td_a_tab: td_a_tab {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_A_TAB";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp A>, <&kp TAB>;
        };       

        td_pp_nxt_prv: td_play_pause_next_prev {
             compatible = "zmk,behavior-tap-dance";
             label = "TD_PLAY_PAUSE_NEXT_PREV";
             #binding-cells = <0>;
             tapping-term-ms = <200>;
             bindings = <&kp C_PP>, <&kp C_NEXT>, <&kp C_PREV>;
        };

        td_em_bt: td_email_string_bt_toggle {
             compatible = "zmk,behavior-tap-dance";
             label = "TD_EMAIL_STRING_BT_TOGGLE";  
             #binding-cells = <0>;
             tapping-term-ms = <200>;
             bindings = <&none>, <&em_str>, <&mo _BTOOTH>;
        };

        mm_btb_l: mm_brace_to_bracket_left {        
            compatible = "zmk,behavior-mod-morph";
            label = "MM_BRACE_TO_BRACKET_LEFT";
            #binding-cells = <0>;
            bindings = <&kp LBRC>, <&kp LBKT>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        mm_btb_r: mm_brace_to_bracket_right {        
            compatible = "zmk,behavior-mod-morph";
            label = "MM_BRACE_TO_BRACKET_RIGHT";
            #binding-cells = <0>;
            bindings = <&kp RBRC>, <&kp RBKT>;
            mods = <(MOD_LSFT|MOD_RSFT)>; 
        };
    };

    keymap {
        compatible = "zmk,keymap";

        _QWERTY {
            label = "QWERTY";
            bindings = <
                &td_q_esc     &kp W  &kp E  &kp R  &kp T                                                &kp Y          &kp U  &kp I      &kp O    &kp P
                &td_a_tab     &kp S  &kp D  &kp F  &kp G                                                &kp H          &kp J  &kp K      &kp L    &kp SQT
                &mt LSHIFT Z  &kp X  &kp C  &kp V  &kp B                                                &kp N          &kp M  &kp COMMA  &kp DOT  &mt RSHIFT FSLH
                                                   &mt LCTRL DEL  &lt _NAVNUM ENTER  &lt _NAVNUM SPACE  &mt LALT BSPC            
            >;
        };                                             
        
        _CLMKDH {
            label = "CLMKDH";
            bindings = <
                &td_q_esc     &kp W  &kp F  &kp P   &kp B                   &kp J   &kp L   &kp U      &kp Y    &kp SQT
                &td_a_tab     &kp R  &kp S  &kp T   &kp G                   &kp M   &kp N   &kp E      &kp I    &kp O
                &mt LSHIFT Z  &kp X  &kp C  &kp D   &kp V                   &kp K   &kp H   &kp COMMA  &kp DOT  &mt RSHIFT FSLH
                                                    &trans  &trans  &trans  &trans          
            >;
        };

        _NAVNUM {
            label = "NAVNUM";
            bindings = <   
                &td_esc_mtsk      &td_cl_home  &kp UP     &td_cr_end  &kp LPAR                                             &kp RPAR     &kp N7  &kp N8  &kp  N9  &kp LC(DEL)     
                &kp TAB           &kp LEFT     &kp DOWN   &kp RIGHT   &mm_btb_l                                            &mm_btb_r    &kp N4  &kp N5  &kp  N6  &kp SEMI
                &mt LSHIFT SPACE  &kp UNDER    &kp COLON  &kp MINUS   &kp EQUAL                                            &kp PIPE     &kp N1  &kp N2  &kp  N3  &mt LSHIFT BSLH 
                                                                      &mt LCTRL DEL  &lt _USFUNC ENTER  &lt _USFUNC SPACE  &mt LGUI N0
            >;
        };

        _USFUNC {
            label = "USFUNC";
            bindings = <
                &kp CAPS  &kp GRAVE  &kp TILDE  &kp C_BRI_DN  &kp C_BRI_AUTO                &kp C_MUTE  &kp C_VOL_DN  &kp C_VOL_UP  &td_pp_nxt_prv  &td_em_bt    
                &kp EXCL  &kp AT     &kp HASH   &kp DLLR      &kp PRCNT                     &kp CARET   &kp AMPS      &kp ASTRK     &kp MINUS       &kp PLUS  
                &kp F1    &kp F2     &kp F3     &kp F4        &kp F5                        &kp F6      &kp F7        &kp F8        &kp F9          &kp F10   
                                                              &kp F11       &trans  &trans  &kp F12 
            >;
        };

        _BTOOTH { 
            label = "BTOOTH";
            bindings = < 
                &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                        &trans  &trans  &trans  &trans  &trans       
                &bt_str       &trans        &trans        &trans        &trans                              &trans  &trans  &trans  &trans  &trans       
                &bt BT_CLR    &trans        &trans        &trans        &trans                              &trans  &trans  &trans  &trans  &trans  
                                                                        &tog _CLMKdh  &trans  &trans  &trans 
            >;              
        };
    };
};
