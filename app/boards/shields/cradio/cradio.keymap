// Copyright (c) 2022 The ZMK Contributors
// SPDX-License-Identifier: MIT

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define BASE 0
#define NAV_NUM 1
#define NUM_SYM_FUNC 2
#define BLUETOOTH 3

/ { 
    macros {
        bluetoothstring: bluetoothstring {
            compatible = "zmk,behavior-macro";
            label = "BLUETOOTHSTRING";
            #binding-cells = <0>;
            wait-ms = <5>;
            tap-ms = <5>;
            bindings = <&kp B &kp L &kp U &kp E &kp T &kp O &kp O &kp T &kp H >;
        };  
    };
};

/ {
    behaviors {
        q_esc: q_esc {
            compatible = "zmk,behavior-tap-dance";
            label = "Q_ESC";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp Q>, <&kp ESC>;
        };

        a_tab: a_tab {
            compatible = "zmk,behavior-tap-dance";
            label = "A_TAB";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp A>, <&kp TAB>;
        };

        lctl_home: lctl_home {
            compatible = "zmk,behavior-tap-dance";
            label = "LCTL_HOME";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LC(LEFT)>, <&kp HOME>;
        };

        rctl_end: rctl_end {
            compatible = "zmk,behavior-tap-dance";
            label = "RCTL_END";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LC(RIGHT)>, <&kp END>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        BASE {
            bindings = <
                &q_esc          &kp W        &kp E        &kp R             &kp T                &kp Y               &kp U         &kp I      &kp O    &kp P
                &a_tab          &kp S        &kp D        &kp F             &kp G                &kp H               &kp J         &kp K      &kp L    &kp SQT
                &mt LSHIFT Z    &kp X        &kp C        &kp V             &kp B                &kp N               &kp M         &kp COMMA  &kp DOT  &mt RSHIFT FSLH
                                                          &mt LCTRL DEL     &lt NAV_NUM ENTER    &lt NAV_NUM SPACE   &mt LALT BSPC           
            >;
        };

        NAV_NUM {
            bindings = <   
                &lctl_home       &kp UP          &rctl_end    &kp PLUS          &kp LPAR               &kp RPAR            &kp N7        &kp N8    &kp N9   &mo BLUETOOTH
                &kp LEFT         &kp DOWN        &kp RIGHT    &kp EQUAL         &kp LBRC               &kp RBRC            &kp N4        &kp N5    &kp N6   &kp SEMI
                &mt LSHIFT MINUS &kp PIPE        &kp UNDER    &kp MINUS         &kp LBKT               &kp RBKT            &kp N1        &kp N2    &kp N3   &mt RSHIFT BSLH
                                                              &trans            &lt NUM_SYM_FUNC ENTER &lt NUM_SYM_FUNC N0 &trans
            >;
        };

        NUM_SYM_FUNC {
            bindings = <
                &kp N1          &kp N2       &kp N3       &kp N4            &kp N5               &kp N6               &kp N7        &kp N8    &kp N9   &kp N0      
                &kp EXCL        &kp AT       &kp HASH     &kp DLLR          &kp PRCNT            &kp CARET            &kp AMPS      &kp ASTRK &kp LPAR &kp RPAR  
                &kp F1          &kp F2       &kp F3       &kp F4            &kp F5               &kp F6               &kp F7        &kp F8    &kp F9   &kp F10   
                                                          &kp CAPS          &trans               &trans               &trans     
            >;
        };

        BLUETOOTH { 
            bindings = < 
                &bt BT_SEL 0     &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3      &bt BT_SEL 4         &trans               &trans         &trans       &trans       &trans       
                &bluetoothstring &trans       &trans       &trans            &trans               &trans               &trans         &trans       &trans       &trans       
                &bt BT_CLR       &trans       &trans       &trans            &trans               &trans               &trans         &trans       &trans       &trans  
                                                           &trans            &trans               &trans               &trans         
            >;              
        };
    };
};
